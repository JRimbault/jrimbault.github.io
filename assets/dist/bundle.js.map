{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/sidebar.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","switchTheme","shouldSwitch","link","document","querySelector","href","inverse","normalize","current","localStorage","getItem","setAttribute","setItem","window","onload","addEventListener"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,+BCO9C,SAASC,EAAYC,GAAe,GAEzC,MAAMC,EAAOC,SAASC,cAAc,mBAC9BC,EAAQlB,GAAgB,gBAAgBA,QAExCmB,EAAWnB,GACdc,EAA0C,SAATd,EAAkB,QAAU,OAF9C,CAACA,GAAiC,SAATA,EAAkB,OAAS,QAEpDoB,CAAUpB,GAC5B,MAAO,KACL,MAAMqB,EAAUC,aAAaC,QAAQ,SACjCF,EACFN,EAAKS,aAAa,OAAQN,EAAKC,EAAQE,KAEvCN,EAAKS,aAAa,OAAQN,EAAK,UAEjCI,aAAaG,QAAQ,QAASN,EAAQE,K,OCnD1CK,OAAOC,OAAS,K,MACdd,GAAY,EAAZA,GACoD,QAApD,EAAAG,SAASC,cAAc,qCAA6B,SAAEW,iBAAiB,QAASf","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { createNode } from 'dom'\nimport { Resume, Identity, Link } from 'types'\n\nexport function makeSidebar(resume: Resume) {\n  return [\n    createNode('div', {\n      classList: 'cv-nav',\n      children: [\n        makeSidebarList(\n          'Ã€ propos',\n          (resume.paragraphs ?? []).map(p => ({\n            text: p.name,\n            url: '#' + p.id,\n          })),\n        ),\n        makeContact(resume.sidebar),\n        makeThemeSwitcher(),\n      ],\n    }),\n    makeTopSidebar(resume.identity),\n  ]\n}\n\nfunction makeTopSidebar(identity: Identity) {\n  return createNode('div', {\n    classList: 'cv-brand',\n    children: [\n      createNode('a', {\n        classList: 'cv-logo',\n        attributes: { href: '.' },\n        children: [\n          createNode('h2', {\n            textContent: identity.shortName || identity.name,\n          }),\n        ],\n      }),\n    ],\n  })\n}\n\nfunction makeSidebarList(title: string, links: Link[]) {\n  const localTitle = title + '-accordion'\n  return createNode('div', {\n    classList: 'accordion',\n    children: [\n      createNode('input', {\n        id: localTitle,\n        attributes: {\n          name: localTitle + '-checkbox',\n          checked: '',\n          hidden: '',\n          type: 'checkbox',\n        },\n      }),\n      createNode('label', {\n        textContent: title,\n        classList: ['accordion-header', 'c-hand'],\n        attributes: { for: localTitle },\n      }),\n      createNode('div', {\n        classList: 'accordion-body',\n        children: [\n          createNode('ul', {\n            classList: ['menu', 'menu-nav'],\n            children: links.map(link => {\n              return createNode('li', {\n                classList: 'menu-item',\n                children: [\n                  createNode('a', {\n                    textContent: link.text,\n                    attributes: { href: link.url },\n                  }),\n                ],\n              })\n            }),\n          }),\n        ],\n      }),\n    ],\n  })\n}\n\nfunction makeContact(links: Link[]) {\n  return createNode('div', {\n    classList: 'accordion-container',\n    children: [makeSidebarList('contact', links)],\n  })\n}\n\nexport function switchTheme(shouldSwitch = true) {\n  type Theme = 'dark' | 'light'\n  const link = document.querySelector('link#color-mode')!\n  const href = (mode: Theme) => `./assets/css/${mode}.css`\n  const normalize = (mode: Theme | null) => (mode === 'dark' ? 'dark' : 'light')\n  const inverse = (mode: Theme | null) =>\n    !shouldSwitch ? normalize(mode) : mode === 'dark' ? 'light' : 'dark'\n  return () => {\n    const current = localStorage.getItem('theme') as Theme | null\n    if (current) {\n      link.setAttribute('href', href(inverse(current)))\n    } else {\n      link.setAttribute('href', href('light'))\n    }\n    localStorage.setItem('theme', inverse(current))\n  }\n}\n\nfunction makeThemeSwitcher() {\n  const label = createNode('label', {\n    textContent: 'Theme',\n    classList: ['accordion-header', 'c-hand'],\n  })\n  label.addEventListener('click', switchTheme())\n  return createNode('div', {\n    classList: 'accordion',\n    children: [\n      createNode('input', {\n        id: 'theme-switcher-input',\n        attributes: {\n          name: 'theme-checkbox',\n          checked: '',\n          hidden: '',\n          type: 'checkbox',\n        },\n      }),\n      label,\n    ],\n  })\n}\n","import { makeContent } from 'content'\nimport { createNode } from 'dom'\nimport { makeSidebar, switchTheme } from 'sidebar'\nimport { Resume } from 'types'\n\nasync function fetchResume(url: string) {\n  const resume = await (await fetch<Resume>(url)).json()\n  const noscript = document.querySelector('noscript')\n  if (noscript) {\n    document.body.removeChild(noscript)\n  }\n  document.body.append(buildBody(resume))\n  return resume\n}\n\nfunction buildBody(resume: Resume) {\n  return createNode('div', {\n    classList: ['cv-container', 'off-canvas', 'off-canvas-sidebar-show'],\n    children: [\n      createNode('div', {\n        id: 'sidebar',\n        classList: ['cv-sidebar', 'off-canvas-sidebar'],\n        children: makeSidebar(resume),\n      }),\n      createNode('a', {\n        classList: ['off-canvas-overlay'],\n        attributes: { href: '#close' },\n      }),\n      createNode('div', {\n        id: 'content',\n        classList: ['cv-content', 'off-canvas-content'],\n        children: makeContent(resume),\n      }),\n    ],\n  })\n}\n\nasync function main() {\n  try {\n    await fetchResume(\n      `https://gist.githubusercontent.com/${username}/${gistId}/raw/${filename}`,\n    )\n  } catch (error) {\n    console.error(error)\n    fetchResume('assets/data/resume.json').catch(console.log)\n  }\n}\n\nconst username = 'jRimbault'\nconst gistId = 'ddbe04c43dba075e0da9ddb9ebda6926'\nconst filename = 'resume.json'\n\nwindow.onload = () => {\n  switchTheme(false)()\n  document.querySelector('label#theme-switcher-label')?.addEventListener('click', switchTheme())\n  // main()\n}\n"],"sourceRoot":""}